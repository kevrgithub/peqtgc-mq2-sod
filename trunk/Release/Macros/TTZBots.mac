#turbo 40

#chat group
#chat tell

#include common.inc
#include Buff.inc
#include Heal.inc
#include Debuff.inc
#include Pets.inc
#include Nuke.inc
#include Melee.inc
#include ninjaloot.inc

#include RollerCoast.inc

Sub Main
|- Find out what class we are and what we can do...
/if (!${Defined[AmHealer]}) /declare AmHealer bool outer FALSE
/if (!${Defined[AmDebuffer]}) /declare AmDebuffer bool outer FALSE
/if (!${Defined[AmHybrid]}) /declare AmHybrid bool outer FALSE
/if (!${Defined[AmIntCaster]}) /declare AmIntCaster bool outer FALSE
/if (!${Defined[AmMelee]}) /declare AmMelee bool outer FALSE
/if (!${Defined[AmWisCaster]}) /declare AmWisCaster bool outer FALSE
/if (!${Defined[AmPetClass]}) /declare AmPetClass bool outer FALSE


/if (${Me.Class.Name.Equal[Shaman]} || ${Me.Class.Name.Equal[Druid]} || ${Me.Class.Name.Equal[Cleric]}) {
	/echo Healer
	/varset AmHealer TRUE
	/varset AmWisCaster TRUE
}
/if (${Me.Class.Name.Equal[Shaman]} || ${Me.Class.Name.Equal[Enchanter]}) {
	/echo Debuffer
	/varset AmDebuffer TRUE
}
/if (${Me.Class.Name.Equal[Ranger]} || ${Me.Class.Name.Equal[Paladin]} || ${Me.Class.Name.Equal[Shadow Knight]} || ${Me.Class.Name.Equal[Beastlord]}) {
	/echo Hybrid
	/varset AmHybrid TRUE
}
/if (${Me.Class.Name.Equal[Wizard]} || ${Me.Class.Name.Equal[Magician]} || ${Me.Class.Name.Equal[Necromancer]} || ${Me.Class.Name.Equal[Enchanter]}) {
	/echo Int Caster
	/varset AmIntCaster TRUE
}
/if (${Me.Class.Name.Equal[Ranger]} || ${Me.Class.Name.Equal[Monk]} || ${Me.Class.Name.Equal[Bard]} || ${Me.Class.Name.Equal[Rogue]} || ${Me.Class.Name.Equal[Berserker]} || ${Me.Class.Name.Equal[Paladin]} || ${Me.Class.Name.Equal[Shadow Knight]} || ${Me.Class.Name.Equal[Warrior]}) {
	/echo Melee
	/varset AmMelee TRUE
}
/if (${Me.Class.Name.Equal[Shaman]} || ${Me.Class.Name.Equal[Magician]} || ${Me.Class.Name.Equal[Necromancer]} || ${Me.Class.Name.Equal[Beastlord]} || ${Me.Class.Name.Equal[Enchanter]} || ${Me.Class.Name.Equal[Wizard]}) {
	/echo Pet Class
	/varset AmPetClass TRUE
}


|- Set up our includes.......
/if (${AmHealer}) /call HealSetup
/if (${AmDebuffer}) /call DebuffSetup
/if (${AmIntCaster} || ${AmHybrid} || ${AmWisCaster}) /call NukeSetup
/if (${AmPetClass}) /call PetSetup
/if (${AmMelee}) /call MeleeSetup
/call BuffSetup

/if (${Defined[INIFileWasBuilt]}) {
	/echo An INI file has been built or modified. You must go make any required changes an restart your macro.
	/endmacro
}

|- Set up NetBots
/if (${AmHealer} && !${NetBots.Listen}) {
	/netbots grab
}	

/if (!${NetBots.Output}) {
	/netbots send
}

/if (!${NetBots.Enable}) {
	/netbots on
}

/call LootSetup
/call AddMe

:Main_Loop
	/doevents
	
	/if (${AmHealer}) /call Check_HPs
	
	/call CheckSelfBuffs
	
	/call DoUpdates
	
	/if (${AmWisCaster} || ${AmIntCaster}) /call CheckCasterState
	
	/if (${AmWisCaster} || ${AmIntCaster} || ${AmHybrid}) /call CheckNuke	
	
	/if (${AmPetClass}) /call CheckPetStatus
	
	/if (${AmMelee}) /call CheckMeleeStatus
	
	:Hold_Main
	/if (${Me.Moving} || (${Me.Casting.ID} > 0 && ${Me.Class.Name.NotEqual[Bard]}) || ${Me.Invis}) {
		/doevents Follow
		/doevents Stop
		/goto :Hold_Main
	}
	
/goto :Main_Loop

/return


| ##
| # This handles all respective chat events that come through the system
| # 
| # @PARAM - string ChatType - The type of chat that was used. I.E. TELL, GROUP, GUILD
| # @PARAM - string ChatSender - The person who initiated the message.
| # @PARAM - string ChatText - The text of the message.
| ##
Sub Event_Chat(string ChatType,string ChatSender,string ChatText) 
	/if (!${ChatType.Equal[GROUP]} && !${ChatType.Equal[TELL]} && !${ChatType.Equal[IRC]}) /return 	
		/if (${ChatType.Equal[TELL]}) { 
			/if (${ChatSender.Equal[${Me.Pet.CleanName}]}) /return
			/g [${ChatSender}]:${ChatText}  
		/return 
		}
/return 
